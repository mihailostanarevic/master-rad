input {
	file {
		path => "/home/mihailo/Desktop/Logs/**/**"
		codec => multiline {
			pattern => "^\[ %{LOGLEVEL:log_level}\]"
			negate => true
			what => "previous"
	        }
	}
}

filter {
	grok {
		match => { "path" => "/(?<app_name>[^/]+)/(?<file_name>[^/]+).log" }
	}
	grok {
		match => { "message" => ['(?m)\[ %{LOGLEVEL:log_level}\] %{DATE_EU:date}. %{TIME:time} \(%{GREEDYDATA:class}:%{GREEDYDATA:operation}\)\nDate and time: %{GREEDYDATA:full_date_and_time}\| miliseconds: %{NUMBER:milis}\| \+ session id: %{GREEDYDATA:session_id}\| userId: %{BASE10NUM:user_id}\| ip address: %{IP:ip_address}\| location: city: %{GREEDYDATA:city}\, postal code: %{GREEDYDATA:postal_code}\, regionName: %{GREEDYDATA:region_name} \(region: %{GREEDYDATA:region}\)\, countryName: %{GREEDYDATA:country_name} \(country code: %{GREEDYDATA:country_code}\)\, latitude: %{BASE10NUM:latitude}\, longitude: %{BASE10NUM:longitude}\| user agent \(device\): %{GREEDYDATA:device}\| download record id: %{GREEDYDATA:download_record_id}\| file id: %{BASE10NUM:file_id}\| file name: %{GREEDYDATA:name_of_file}\| source: %{GREEDYDATA:source_field}\| license: %{GREEDYDATA:license}\| record: %{GREEDYDATA:record}',
		'(?m)\[ %{LOGLEVEL:log_level}\] %{DATE_EU:date}. %{TIME:time} \(%{DATA:class}:%{GREEDYDATA:operation}\)\nDate and time: %{GREEDYDATA:full_date_and_time}\| miliseconds: %{NUMBER:millis}\| query: %{GREEDYDATA:query}\| searching mode: %{GREEDYDATA:searching_mode}\| language: %{GREEDYDATA:language}\| session id: %{GREEDYDATA:session_id}\| userId: %{NUMBER:user_id}\| ip address: %{IP:ip_address}\| location: city: %{GREEDYDATA:location.city}, postal code: %{GREEDYDATA:location.postal_code}, regionName: %{GREEDYDATA:location.region_name} \(region: %{GREEDYDATA:location.region}\), countryName: %{GREEDYDATA:location.country_name} \(country code: %{GREEDYDATA:location.country_code}\), latitude: %{NUMBER:location.latitude}, longitude: %{NUMBER:location.longitude}\| user agent \(device\): %{GREEDYDATA:device}\| order number: %{NUMBER:order_number}\| record id: %{GREEDYDATA:record_id}\| file url: %{GREEDYDATA:file_url}\| license: (%{DATA: license})? \| record: %{GREEDYDATA:record}',
		'(?m)\[ %{LOGLEVEL:log_level}\] %{DATE_EU:date}. %{TIME:time} \(%{GREEDYDATA:class}:%{GREEDYDATA:operation}\)\nView record page: %{GREEDYDATA:record_page} \| %{GREEDYDATA:thesis_portal} \| %{IP:ipAddress} \| record: %{GREEDYDATA:record}',
		'(?m)\[ %{LOGLEVEL:log_level}\] %{DATE_EU:date}. %{TIME:time} \(%{GREEDYDATA:class}:%{GREEDYDATA:operation}\)\nDate and time: %{GREEDYDATA:full_date_and_time}\| miliseconds: %{NUMBER:millis}\| query: %{GREEDYDATA:query}\| searching mode: %{GREEDYDATA:searching_mode}\| language: %{GREEDYDATA:language}\| session id: %{GREEDYDATA:session_id}\| userId: %{GREEDYDATA:user_id}\| ip address: %{IP:ip_address}\| location: city: %{GREEDYDATA:location.city}, postal code: %{GREEDYDATA:location.postal_code}, regionName: %{GREEDYDATA:location.region_name} \(region: %{GREEDYDATA:location.region}\), countryName: %{GREEDYDATA:location.country_name} \(country code: %{GREEDYDATA:location.country_code}\), latitude: %{NUMBER:location.latitude}, longitude: %{NUMBER:location.longitude}\| user agent \(device\): %{GREEDYDATA:device}'] }
		overwrite => [ "message" ]
	}
	mutate { remove_field => [ "message" ] }
}

output {
	elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "%{file_name}"
	}
  	stdout { codec => rubydebug }
}

